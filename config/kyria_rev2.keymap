/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#define BASE    0
#define EDIT    1
#define NUM     2
#define SYM     3
#define FUNC    4
#define XXX     5


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&left_encoder {
    resolution = <2>;
};


/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |shftA|  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |shft;  |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp ESC   &kp Q           &kp W           &kp E          &kp R     &kp T                                            &kp Y       &kp U     &kp I       &kp O       &kp P          &kp BSLH
	&kp TAB   &hm LCTRL A     &hm LSHFT S     &hm LALT D     &kp F     &kp G                                            &kp H       &kp J     &hm RALT K  &hm RSHFT L &hm RCTRL SEMI &kp SQT
	&kp CAPS  &kp Z           &kp X           &kp C          &kp V     &kp B    &trans    &trans    &trans    &trans    &kp N       &kp M     &kp COMMA   &kp DOT     &kp FSLH       &kp RET
	                                          &kp LGUI       &mo NUM   &mo EDIT &trans    &mo SYM   &mo SYM   &kp SPACE &mo FUNC    &trans    &C_PP
			>;

			sensor-bindings = <&inc_dec_kp LC(Z) LC(LS(Z)) &inc_dec_kp LS(TAB) TAB>;
		};



		edit_layer {
			bindings = <
	&trans    &trans          &kp LC(W)       &trans         &kp LC(R) &kp LC(T)                                        &trans      &kp HOME  &trans      &kp END     &kp K_SCROLL_UP   &kp PG_UP
	&trans    &hm LCTRL LC(A) &hm LSHFT LC(S) &hm LALT LC(D) &kp LC(F) &trans                                           &kp LS(TAB) &kp LEFT  &kp UP      &kp RIGHT   &kp TAB           &trans
	&trans    &kp LC(Z)       &kp LC(X)       &kp LC(C)      &kp LC(V) &trans   &trans    &trans    &trans    &trans    &trans      &kp BSPC  &kp DOWN    &kp DEL     &kp K_SCROLL_DOWN &kp PG_DN
	                                          &trans         &trans    &trans   &trans    &trans    &trans    &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp LEFT RIGHT>;
		};



		num_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | `     |  !  |  +  |  [   |  ]   |  =   |                                          |  %   |  7    |  8    |  9   |   *   | /    |
// | #     |  @  |  _  |  (   |  )   |  -   |                                          |  $   |  4    |  5    |  6   |   +   | ---  |
// | ~     |  \  |  &  |  {   |  }   |  |   |   ---   |  ---    |  |   ---   |  ---    |  ^   |  1    |  2    |  3   |   -   | ---  |
//                     | ENC  | ---  | ---  |   ---   |  ---    |  |   ---   |  ---    |  0   |  .    | ---   |
			bindings = <
	&kp GRAVE &kp EXCL &kp PLUS  &kp LBKT &kp RBKT &kp EQUAL                             &kp CARET &kp N7 &kp N8 &kp N9 &kp KP_MULTIPLY &kp KP_DIVIDE
	&kp HASH  &kp AT   &kp UNDER &kp LPAR &kp RPAR &kp MINUS                             &kp PRCNT &kp N4 &kp N5 &kp N6 &kp KP_PLUS &none
	&kp TILDE &kp BSLH &kp AMPS  &kp LBRC &kp RBRC &kp PIPE &trans &trans  &trans &trans &kp DLLR  &kp N1 &kp N2 &kp N3 &kp KP_MINUS &trans
	                       &trans  &trans   &trans          &trans &trans  &trans &trans &kp N0    &kp DOT    &trans
			>;

			sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};



		symbol_layer {
// ------------------------------------------ SYMBOL   LAYER -------------------------------------------
// |     |  <  |  [  |  {  |  (  |  /  |                           |  \  |  )  |  }  |  ]  |  >  |     |
// |  <  |  #  |  *  |  +  |  _  |  @  |                           |  &  |  -  |  =  |  ^  |  $  |  >  |
// |     |  %  |  !  |  `  |  :  |  '  | ESC |     |  | RET |  GUI |  "  |  ;  |  ~  |  ?  |  |  |     |
//                   | MUT | TAB | CTR | SFT |     |  | RET |  BSP | DEL | ALT |     |

            label = "Modifier";

            bindings = <
    &trans &kp LT    &kp LBKT  &kp LBRC   &kp LPAR  &kp FSLH                                                  &kp BSLH &kp RPAR  &kp RBRC  &kp RBKT  &kp GT   &trans
    &kp LT &kp HASH  &kp STAR  &kp PLUS   &kp UNDER &kp AT                                                    &kp AMPS &kp MINUS &kp EQUAL &kp CARET &kp DLLR &kp GT
    &trans &kp PRCNT &kp EXCL  &kp GRAVE  &kp COLON &kp APOS  &gresc  &trans  &trans &kp LGUI &kp DQT  &kp SEMI  &kp TILDE &kp QMARK &kp PIPE &trans
                               &kp C_MUTE &kp TAB   &kp LCTRL &kp TAB &trans  &trans &kp BSPC &kp DEL  &kp LALT  &kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN  &inc_dec_kp LS(K_SCROLL_UP) LS(K_SCROLL_DOWN)>;
        };



		function_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | none  |  F2 | mute| V+   | stp  |   @  |                                       | F12  |  F7   |  F8   |  F9  | Print| none |
// | none  | caps| Prev| V-   | Next |   @p |                                       | F11  |  F4   |  F5   |  F6  | Ins  | none |
// | none  | /Ble| Ble0| Ble1 | Ble2 | Ble3 |  Ble4  |  ---    |  |   ---   |  ---  | F10  |  F1   |  F2   |  F3  | ---  | none |
//                     | ---  | ---  | ---  |  ---   |  ---    |  |   ---   |  ---  | ---  | ---   | ---   |
			bindings = <
	&trans &kp F2     &kp C_MUTE   &kp C_VOL_UP &kp C_STOP   &none                                                &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN &trans
	&trans &kp CAPS   &kp C_PREV   &kp C_VOL_DN &kp C_NEXT   &none                                                &kp F11 &kp F4 &kp F5 &kp F6 &kp INS  &trans
	&trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &out OUT_TOG  &none  &none &kp F10 &kp F1 &kp F2 &kp F3 &trans   &trans
	                         &trans        &trans        &trans           &trans       &trans        &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp LC(K_SCROLL_DOWN) LC(K_SCROLL_UP) &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};



		xxx_layer {
			bindings = <
	&trans    &trans          &trans          &trans         &trans    &trans                                           &trans      &trans    &trans      &trans      &trans         &trans
	&trans    &trans          &trans          &trans         &trans    &trans                                           &trans      &trans    &trans      &trans      &trans         &trans
	&trans    &trans          &trans          &trans         &trans    &trans   &trans    &trans    &trans    &trans    &trans      &trans    &trans      &trans      &trans         &trans
	                                          &trans         &trans    &trans   &trans    &trans    &trans    &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp LEFT RIGHT>;
		};
	};
};
