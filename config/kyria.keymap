/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#define BASE    0
#define EDIT    1
#define NUM     2
#define SYM     3
#define FUNC    4
#define XXX     5


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


&left_encoder {
    resolution = <2>;
};

&right_encoder {
    resolution = <2>;
};


/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

//  ___________________________________         KEY INDICES        ___________________________________ 
// |  0  |  1  |  2  |  3  |  4  |  5  |                          |  6  |  7  |  8  |  9  | 10  | 11  |
// | 12  | 13  | 14  | 15  | 16  | 17  |                          | 18  | 19  | 20  | 21  | 22  | 23  |
// | 24  | 25  | 26  | 27  | 28  | 29  | 30  | 31  |  |  32 | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
//                   | 40  | 41  | 42  | 43  | 44  |  |  45 | 46  | 47  | 48  | 49  |
//                     ◌                                                         ◌ 

        hml: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
    		global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 34 35 36 37 38 39>;
        };

        hmr: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
    		global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <

//  ___________________________________            BASE            ___________________________________ 
// | ESC |  Q  |  W  |  E  |  R  |  T  |                          |  Y  |  U  |  I  |  O  |  P  |  \  |
// | _NU |  A  |  S  |  D  |  F  |  G  |___________    ___________|  H  |  J  |  K  |  L  |  ;  | RET |
// |CAPS | cZ  | sX  | aC  |  V  |  B  | REP |     |  |     | REP |  N  |  M  | a,  | s.  | c/  |  '  |
//                   |     | GUI | _ED |  E  | _SY |  | _SY | SPC |     | _FN | F13 |
//                 undo ◌ redo                                              tabL ◌ tabR

	&kp ESC  &kp Q       &kp W       &kp E      &kp R    &kp T                                             &kp Y    &kp U    &kp I          &kp O         &kp P          &kp BSLH
	&mo NUM  &kp A       &kp S       &kp D      &kp F    &kp G                                             &kp H    &kp J    &kp K          &kp L         &kp SEMI       &kp RET
	&kp CAPS &hm LCTRL Z &hm LSHFT X &hm LALT C &kp V    &kp B    &key_repeat &trans   &trans  &key_repeat &kp N    &kp M    &hm RALT COMMA &hm RSHFT DOT &hm RCTRL FSLH &kp SQT
	                                 &none      &kp RGUI &mo EDIT &kp E       &mo SYM  &mo SYM &kp SPACE   &mo FUNC &mo FUNC &kp F13
			>;

			sensor-bindings = <&inc_dec_kp LC(Z) LC(LS(Z)) &inc_dec_kp LS(TAB) TAB>;
		};



		edit_layer {
			bindings = <

//  ___________________________________          TEXT EDIT         ___________________________________ 
// |     |     |CLOSE|     | RLD | TAB |                          |PG_UP|HOME |     | END |scrl+|     |
// |     | SEL |SAVE |DUPE |FIND |     |___________    ___________|sTAB |  ←  |  ↑  |  →  | TAB | RET |
// |     |cUNDO|sCUT |aCOPY|PASTE|     |     |     |  |     |     |PG_DN|BSPC |  ↓  | DEL |scrl-|     |
//                   |     |     |     |     |     |  |     |     |     |     |     |
//                      ◌                                                      ↑ ◌ ↓

	&trans &trans          &kp LC(W)       &trans         &kp LC(R) &kp LC(T)                             &kp PG_UP   &kp HOME &trans   &kp END   &kp C_AC_SCROLL_UP   &trans
	&trans &kp LC(A)       &kp LC(S)       &kp LC(D)      &kp LC(F) &trans                                &kp LS(TAB) &kp LEFT &kp UP   &kp RIGHT &kp TAB              &kp RET
	&trans &hm LCTRL LC(Z) &hm LSHFT LC(X) &hm LALT LC(C) &kp LC(V) &trans   &trans &trans  &trans &trans &kp PG_DN   &kp BSPC &kp DOWN &kp DEL   &kp C_AC_SCROLL_DOWN &trans
	                                       &trans         &trans    &trans   &trans &trans  &trans &trans &trans      &trans   &trans
			>;

			sensor-bindings = <&inc_dec_kp F24 F24 &inc_dec_kp UP DOWN>;
		};



		num_layer {
			bindings = <

//  ___________________________________           NUMBERS         ____________________________________ 
// |     |     |     |     |     |     |                          |  €  |  7  |  8  |  9  |  *  |  /  |
// |     |     |     |     |     |     |___________    ___________|  %  |  4  |  5  |  6  |  +  |     |
// |     |     |     |     |     |     |     |     |  |     |     |  $  |  1  |  2  |  3  |  -  |     |
//                   |     |     |     |     |     |  |     |     |  0  |  .  |     |
//                      ◌                                                   tabL ◌ tabR

	&trans &trans &trans &trans &trans &trans                              &kp RA(N5) &kp N7 &kp N8 &kp N9 &kp KP_MULTIPLY &kp KP_DIVIDE
	&trans &trans &trans &trans &trans &trans                              &kp PRCNT  &kp N4 &kp N5 &kp N6 &kp KP_PLUS     &trans    
	&trans &trans &trans &trans &trans &trans &trans &trans  &trans &trans &kp DLLR   &kp N1 &kp N2 &kp N3 &kp KP_MINUS    &trans
	                     &trans &trans &trans &trans &trans  &trans &trans &kp N0     &kp DOT    &trans
			>;

			sensor-bindings = <&inc_dec_kp F24 F24 &inc_dec_kp LS(TAB) TAB>;
		};



		symbol_layer {
            label = "Modifier";
            bindings = <

//  ___________________________________           SYMBOLS          ___________________________________ 
// |     |     |     |  *  |     |     |                          |  €  |  {  |  }  |     |     |     |
// |     |  #  |  ^  |  _  |  -  |     |___________    ___________|  %  |  (  |  )  |  =  |  :  |     |
// |     |     |  &  |  @  |  +  |     |     |     |  |     |     |  $  |  [  |  ]  |  ~  |  !  |  `  |
//                   |     |     |     |     |     |  |     |     |     |     | F14 |
//                      ◌                                                      ← ◌ →

    &trans &trans   &kp PRCNT &kp STAR  &trans    &trans                              &kp RA(N5) &kp LBRC &kp RBRC &trans    &trans    &trans
    &trans &kp HASH &kp CARET &kp UNDER &kp MINUS &trans                              &kp PRCNT  &kp LPAR &kp RPAR &kp EQUAL &kp COLON &trans
    &trans &trans   &kp AMPS  &kp AT    &kp PLUS  &trans &trans &trans  &trans &trans &kp DLLR   &kp LBKT &kp RBKT &kp TILDE &kp EXCL  &kp GRAVE
                              &trans    &trans    &trans &trans &trans  &trans &trans &trans     &trans   &kp F14
            >;

            sensor-bindings = <&inc_dec_kp F24 F24 &inc_dec_kp LEFT RIGHT>;
        };



		function_layer {
			bindings = <

//  ___________________________________          FUNCTIONS         ___________________________________ 
// |     | F2  |mute | V+  | stp |  @  |                          | F12 | F7  | F8  | F9  |Print|TASK |
// |     |caps |Prev | V-  |Next | @p  |___________    ___________| F11 | F4  | F5  | F6  | Ins |SNIP |
// |     |/Ble |Ble0 |Ble1 |Ble2 |Ble3 |Ble4 |     |  |     |     | F10 | F1  | F2  | F3  |     |FIXV |
//                   |     |     |     |     |     |  |     |     |     |     |PLAYP|
//                      ◌                                                        ◌ 

	&trans &kp F2     &kp C_MUTE   &kp C_VOL_UP &kp C_STOP   &trans                                                &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN &kp LC(LS(ESC))
	&trans &kp CAPS   &kp C_PREV   &kp C_VOL_DN &kp C_NEXT   &trans                                                &kp F11 &kp F4 &kp F5 &kp F6 &kp INS   &kp LS(LG(S))  
	&trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &out OUT_TOG  &trans &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans    &kp LA(LG(C))  
	                               &trans       &trans       &trans       &trans       &trans        &trans &trans &trans  &trans &kp C_PP
			>;

			sensor-bindings = <&inc_dec_kp F24 F24 &inc_dec_kp F24 F24>;
		};



		xxx_layer {
			bindings = <

//  ___________________________________           XXXXXX           ___________________________________ 
// |     |     |     |     |     |     |                          |     |     |     |     |     |     |
// |     |     |     |     |     |     |___________    ___________|     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     |  |     |     |     |     |     |     |     |     |
//                   |     |     |     |     |     |  |     |     |     |     |     |
//                      ◌                                                        ◌ 

	&trans &trans &trans &trans &trans &trans                              &trans &trans &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans                              &trans &trans &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans &trans
	                     &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp F24 F24 &inc_dec_kp F24 F24>;
		};
	};
};
